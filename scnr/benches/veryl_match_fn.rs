#[allow(clippy::manual_is_ascii_check, dead_code)]
pub(crate) fn match_function(char_class: usize, c: char) -> bool {
    static CHAR_CLASS_TABLE: &[fn(char) -> bool] = &[
        |c| c == '\r',
        |c| c == '\n',
        |c| matches ! (c , '\t' | '\u{b}' ..= '\u{c}' | ' ' | '\u{85}' | '\u{a0}' | '\u{1680}' | '\u{2000}' ..= '\u{200a}' | '\u{2028}' ..= '\u{2029}' | '\u{202f}' | '\u{205f}' | '\u{3000}'),
        |c| c == '/',
        |c| matches ! (c , '\0' ..= '\t' | '\u{b}' ..= '\u{10ffff}'),
        |c| c == '*',
        |c| matches ! (c , '\0' ..= ')' | '+' ..= '\u{10ffff}'),
        |c| matches ! (c , '\0' ..= '.' | '0' ..= '\u{10ffff}'),
        |c| matches ! (c , '\t' ..= '\r' | ' ' | '\u{85}' | '\u{a0}' | '\u{1680}' | '\u{2000}' ..= '\u{200a}' | '\u{2028}' ..= '\u{2029}' | '\u{202f}' | '\u{205f}' | '\u{3000}'),
        |c| c == '"',
        |c| c == '\\',
        |c| matches!(c, '"' | '/' | '\\' | 'b' | 'f' | 'n' | 'r' | 't'),
        |c| c == 'u',
        |c| matches ! (c , '0' ..= '9' | 'A' ..= 'F' | 'a' ..= 'f'),
        |c| matches ! (c , ' ' ..= '!' | '#' ..= '[' | ']' ..= '\u{10ffff}'),
        |c| matches!(c, '0'..='9'),
        |c| c == '_',
        |c| c == '.',
        |c| matches!(c, 'E' | 'e'),
        |c| matches!(c, '+' | '-'),
        |c| c == '\'',
        |c| c == 's',
        |c| matches!(c, 'b' | 'd' | 'h' | 'o'),
        |c| matches ! (c , '0' ..= '9' | 'A' ..= 'F' | 'X' | 'Z' | 'a' ..= 'f' | 'x' | 'z'),
        |c| matches!(c, '0'..='1' | 'X' | 'Z' | 'x' | 'z'),
        |c| c == '-',
        |c| c == ':',
        |c| c == '>',
        |c| c == '+',
        |c| c == '=',
        |c| c == '%',
        |c| c == '&',
        |c| c == '|',
        |c| c == '^',
        |c| c == '<',
        |c| matches!(c, '%' | '/'),
        |c| c == '?',
        |c| c == '!',
        |c| c == '~',
        |c| c == '`',
        |c| c == ',',
        |c| c == '#',
        |c| c == '{',
        |c| c == '[',
        |c| c == '(',
        |c| c == '}',
        |c| c == ']',
        |c| c == ')',
        |c| c == ';',
        |c| c == 'a',
        |c| c == 'l',
        |c| c == 'w',
        |c| c == 'y',
        |c| c == 'c',
        |c| c == 'o',
        |c| c == 'm',
        |c| c == 'b',
        |c| c == 'f',
        |c| c == 'i',
        |c| c == 'g',
        |c| c == 'n',
        |c| c == 't',
        |c| c == 'e',
        |c| c == 'k',
        |c| c == 'p',
        |c| c == 'd',
        |c| c == 'x',
        |c| c == 'r',
        |c| c == '3',
        |c| c == '2',
        |c| c == '6',
        |c| c == '4',
        |c| c == 'h',
        |c| c == 'v',
        |c| c == '$',
        |c| matches ! (c , 'A' ..= 'Z' | '_' | 'a' ..= 'z'),
        |c| matches ! (c , '$' | '0' ..= '9' | 'A' ..= 'Z' | '_' | 'a' ..= 'z'),
        |c| matches ! (c , '\0' ..= 'z' | '|' | '~' ..= '\u{10ffff}'),
    ];
    if let Some(func) = CHAR_CLASS_TABLE.get(char_class) {
        func(c)
    } else {
        false
    }
}
